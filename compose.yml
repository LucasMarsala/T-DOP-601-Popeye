services:
  redis:
    image: redis:7.2.4-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    networks:
      - poll-tier
      - back-tier
  db:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - '5432:5432'
    networks:
      - result-tier
      - back-tier
  poll:
    build: ./poll
    container_name: poll
    restart: always
    environment:
      REDIS_HOST: ${REDIS_HOST}
    ports:
      - '5000:80'
    networks:
      - poll-tier
    depends_on:
      - redis
  worker:
    build:
      context: ./worker
    container_name: worker
    restart: always
    environment:
      REDIS_HOST: ${REDIS_HOST}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - poll-tier
      - back-tier
    depends_on:
      - redis
      - db
  result:
    build: ./result
    container_name: result
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5001:80'
    networks:
      - result-tier
    depends_on:
      - redis

networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge

volumes:
  db-data:
